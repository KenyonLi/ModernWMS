// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using ModernWMS.Core.DBContext;

#nullable disable

namespace ModernWMS.Core.Migrations
{
    [DbContext(typeof(SqlDBContext))]
    [Migration("20230823033458_InitialDB")]
    partial class InitialDB
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.1")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("ModernWMS.Core.Models.UserroleEntity", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<DateTime>("create_time")
                        .HasColumnType("datetime(6)");

                    b.Property<bool>("is_valid")
                        .HasColumnType("tinyint(1)");

                    b.Property<DateTime>("last_update_time")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("role_name")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<long>("tenant_id")
                        .HasColumnType("bigint");

                    b.HasKey("id");

                    b.ToTable("userrole");
                });

            modelBuilder.Entity("ModernWMS.Core.Models.userEntity", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("auth_string")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("contact_tel")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<DateTime>("create_time")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("creator")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("email")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<bool>("is_valid")
                        .HasColumnType("tinyint(1)");

                    b.Property<DateTime>("last_update_time")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("sex")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<long>("tenant_id")
                        .HasColumnType("bigint");

                    b.Property<string>("user_name")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("user_num")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("user_role")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("id");

                    b.ToTable("user");
                });

            modelBuilder.Entity("ModernWMS.WMS.Entities.Models.AsnEntity", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int>("actual_qty")
                        .HasColumnType("int");

                    b.Property<string>("asn_no")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<int>("asn_qty")
                        .HasColumnType("int");

                    b.Property<byte>("asn_status")
                        .HasColumnType("tinyint unsigned");

                    b.Property<DateTime>("create_time")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("creator")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<int>("damage_qty")
                        .HasColumnType("int");

                    b.Property<int>("goods_owner_id")
                        .HasColumnType("int");

                    b.Property<string>("goods_owner_name")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<bool>("is_valid")
                        .HasColumnType("tinyint(1)");

                    b.Property<DateTime>("last_update_time")
                        .HasColumnType("datetime(6)");

                    b.Property<int>("more_qty")
                        .HasColumnType("int");

                    b.Property<int>("shortage_qty")
                        .HasColumnType("int");

                    b.Property<int>("sku_id")
                        .HasColumnType("int");

                    b.Property<int>("sorted_qty")
                        .HasColumnType("int");

                    b.Property<int>("spu_id")
                        .HasColumnType("int");

                    b.Property<int>("supplier_id")
                        .HasColumnType("int");

                    b.Property<string>("supplier_name")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<long>("tenant_id")
                        .HasColumnType("bigint");

                    b.Property<decimal>("volume")
                        .HasColumnType("decimal(65,30)");

                    b.Property<decimal>("weight")
                        .HasColumnType("decimal(65,30)");

                    b.HasKey("id");

                    b.ToTable("asn");
                });

            modelBuilder.Entity("ModernWMS.WMS.Entities.Models.AsnsortEntity", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int>("asn_id")
                        .HasColumnType("int");

                    b.Property<DateTime>("create_time")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("creator")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<bool>("is_valid")
                        .HasColumnType("tinyint(1)");

                    b.Property<DateTime>("last_update_time")
                        .HasColumnType("datetime(6)");

                    b.Property<int>("sorted_qty")
                        .HasColumnType("int");

                    b.Property<long>("tenant_id")
                        .HasColumnType("bigint");

                    b.HasKey("id");

                    b.ToTable("asnsort");
                });

            modelBuilder.Entity("ModernWMS.WMS.Entities.Models.CategoryEntity", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("category_name")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<DateTime>("create_time")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("creator")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<bool>("is_valid")
                        .HasColumnType("tinyint(1)");

                    b.Property<DateTime>("last_update_time")
                        .HasColumnType("datetime(6)");

                    b.Property<int>("parent_id")
                        .HasColumnType("int");

                    b.Property<long>("tenant_id")
                        .HasColumnType("bigint");

                    b.HasKey("id");

                    b.ToTable("category");
                });

            modelBuilder.Entity("ModernWMS.WMS.Entities.Models.CompanyEntity", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("address")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("city")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("company_name")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("contact_tel")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<DateTime>("create_time")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime>("last_update_time")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("manager")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<long>("tenant_id")
                        .HasColumnType("bigint");

                    b.HasKey("id");

                    b.ToTable("company");
                });

            modelBuilder.Entity("ModernWMS.WMS.Entities.Models.CustomerEntity", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("address")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("city")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("contact_tel")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<DateTime>("create_time")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("creator")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("customer_name")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("email")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<bool>("is_valid")
                        .HasColumnType("tinyint(1)");

                    b.Property<DateTime>("last_update_time")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("manager")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<long>("tenant_id")
                        .HasColumnType("bigint");

                    b.HasKey("id");

                    b.ToTable("customer");
                });

            modelBuilder.Entity("ModernWMS.WMS.Entities.Models.DispatchlistEntity", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int>("actual_qty")
                        .HasColumnType("int");

                    b.Property<string>("carrier")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<DateTime>("create_time")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("creator")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<int>("customer_id")
                        .HasColumnType("int");

                    b.Property<string>("customer_name")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<int>("damage_qty")
                        .HasColumnType("int");

                    b.Property<string>("dispatch_no")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<byte>("dispatch_status")
                        .HasColumnType("tinyint unsigned");

                    b.Property<decimal>("freightfee")
                        .HasColumnType("decimal(65,30)");

                    b.Property<int>("intrasit_qty")
                        .HasColumnType("int");

                    b.Property<DateTime>("last_update_time")
                        .IsConcurrencyToken()
                        .HasColumnType("datetime(6)");

                    b.Property<int>("lock_qty")
                        .HasColumnType("int");

                    b.Property<string>("package_no")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("package_person")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<int>("package_qty")
                        .HasColumnType("int");

                    b.Property<DateTime>("package_time")
                        .HasColumnType("datetime(6)");

                    b.Property<int>("picked_qty")
                        .HasColumnType("int");

                    b.Property<int>("qty")
                        .HasColumnType("int");

                    b.Property<int>("sign_qty")
                        .HasColumnType("int");

                    b.Property<int>("sku_id")
                        .HasColumnType("int");

                    b.Property<long>("tenant_id")
                        .HasColumnType("bigint");

                    b.Property<decimal>("volume")
                        .HasColumnType("decimal(65,30)");

                    b.Property<string>("waybill_no")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("weighing_no")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("weighing_person")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<int>("weighing_qty")
                        .HasColumnType("int");

                    b.Property<decimal>("weighing_weight")
                        .HasColumnType("decimal(65,30)");

                    b.Property<decimal>("weight")
                        .HasColumnType("decimal(65,30)");

                    b.HasKey("id");

                    b.ToTable("dispatchlist");
                });

            modelBuilder.Entity("ModernWMS.WMS.Entities.Models.DispatchpicklistEntity", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int>("dispatchlist_id")
                        .HasColumnType("int");

                    b.Property<int>("goods_location_id")
                        .HasColumnType("int");

                    b.Property<int>("goods_owner_id")
                        .HasColumnType("int");

                    b.Property<bool>("is_update_stock")
                        .HasColumnType("tinyint(1)");

                    b.Property<DateTime>("last_update_time")
                        .HasColumnType("datetime(6)");

                    b.Property<int>("pick_qty")
                        .HasColumnType("int");

                    b.Property<int>("picked_qty")
                        .HasColumnType("int");

                    b.Property<int>("sku_id")
                        .HasColumnType("int");

                    b.HasKey("id");

                    b.HasIndex("dispatchlist_id");

                    b.ToTable("dispatchpicklist");
                });

            modelBuilder.Entity("ModernWMS.WMS.Entities.Models.FreightfeeEntity", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("arrival_city")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("carrier")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<DateTime>("create_time")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("creator")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("departure_city")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<bool>("is_valid")
                        .HasColumnType("tinyint(1)");

                    b.Property<DateTime>("last_update_time")
                        .HasColumnType("datetime(6)");

                    b.Property<decimal>("min_payment")
                        .HasColumnType("decimal(65,30)");

                    b.Property<decimal>("price_per_volume")
                        .HasColumnType("decimal(65,30)");

                    b.Property<decimal>("price_per_weight")
                        .HasColumnType("decimal(65,30)");

                    b.Property<long>("tenant_id")
                        .HasColumnType("bigint");

                    b.HasKey("id");

                    b.ToTable("freightfee");
                });

            modelBuilder.Entity("ModernWMS.WMS.Entities.Models.GoodslocationEntity", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<DateTime>("create_time")
                        .HasColumnType("datetime(6)");

                    b.Property<bool>("is_valid")
                        .HasColumnType("tinyint(1)");

                    b.Property<DateTime>("last_update_time")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("layer_number")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<decimal>("location_heigth")
                        .HasColumnType("decimal(65,30)");

                    b.Property<decimal>("location_length")
                        .HasColumnType("decimal(65,30)");

                    b.Property<decimal>("location_load")
                        .HasColumnType("decimal(65,30)");

                    b.Property<string>("location_name")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<decimal>("location_volume")
                        .HasColumnType("decimal(65,30)");

                    b.Property<decimal>("location_width")
                        .HasColumnType("decimal(65,30)");

                    b.Property<string>("roadway_number")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("shelf_number")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("tag_number")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<long>("tenant_id")
                        .HasColumnType("bigint");

                    b.Property<int>("warehouse_area_id")
                        .HasColumnType("int");

                    b.Property<string>("warehouse_area_name")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<byte>("warehouse_area_property")
                        .HasColumnType("tinyint unsigned");

                    b.Property<int>("warehouse_id")
                        .HasColumnType("int");

                    b.Property<string>("warehouse_name")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("id");

                    b.ToTable("goodslocation");
                });

            modelBuilder.Entity("ModernWMS.WMS.Entities.Models.GoodsownerEntity", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("address")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("city")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("contact_tel")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<DateTime>("create_time")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("creator")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("goods_owner_name")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<bool>("is_valid")
                        .HasColumnType("tinyint(1)");

                    b.Property<DateTime>("last_update_time")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("manager")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<long>("tenant_id")
                        .HasColumnType("bigint");

                    b.HasKey("id");

                    b.ToTable("goodsowner");
                });

            modelBuilder.Entity("ModernWMS.WMS.Entities.Models.MenuEntity", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("menu_name")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("module")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<int>("sort")
                        .HasColumnType("int");

                    b.Property<long>("tenant_id")
                        .HasColumnType("bigint");

                    b.Property<string>("vue_directory")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("vue_path")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("vue_path_detail")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("id");

                    b.ToTable("menu");
                });

            modelBuilder.Entity("ModernWMS.WMS.Entities.Models.RolemenuEntity", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<byte>("authority")
                        .HasColumnType("tinyint unsigned");

                    b.Property<DateTime>("create_time")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime>("last_update_time")
                        .HasColumnType("datetime(6)");

                    b.Property<int>("menu_id")
                        .HasColumnType("int");

                    b.Property<long>("tenant_id")
                        .HasColumnType("bigint");

                    b.Property<int>("userrole_id")
                        .HasColumnType("int");

                    b.HasKey("id");

                    b.ToTable("rolemenu");
                });

            modelBuilder.Entity("ModernWMS.WMS.Entities.Models.SkuEntity", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<decimal>("cost")
                        .HasColumnType("decimal(65,30)");

                    b.Property<DateTime>("create_time")
                        .HasColumnType("datetime(6)");

                    b.Property<decimal>("height")
                        .HasColumnType("decimal(65,30)");

                    b.Property<DateTime>("last_update_time")
                        .HasColumnType("datetime(6)");

                    b.Property<decimal>("lenght")
                        .HasColumnType("decimal(65,30)");

                    b.Property<decimal>("price")
                        .HasColumnType("decimal(65,30)");

                    b.Property<string>("sku_code")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("sku_name")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<int>("spu_id")
                        .HasColumnType("int");

                    b.Property<string>("unit")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<decimal>("volume")
                        .HasColumnType("decimal(65,30)");

                    b.Property<decimal>("weight")
                        .HasColumnType("decimal(65,30)");

                    b.Property<decimal>("width")
                        .HasColumnType("decimal(65,30)");

                    b.HasKey("id");

                    b.HasIndex("spu_id");

                    b.ToTable("sku");
                });

            modelBuilder.Entity("ModernWMS.WMS.Entities.Models.SpuEntity", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("bar_code")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("brand")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<int>("category_id")
                        .HasColumnType("int");

                    b.Property<DateTime>("create_time")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("creator")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<bool>("is_valid")
                        .HasColumnType("tinyint(1)");

                    b.Property<DateTime>("last_update_time")
                        .HasColumnType("datetime(6)");

                    b.Property<byte>("length_unit")
                        .HasColumnType("tinyint unsigned");

                    b.Property<string>("origin")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("spu_code")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("spu_description")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("spu_name")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<int>("supplier_id")
                        .HasColumnType("int");

                    b.Property<string>("supplier_name")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<long>("tenant_id")
                        .HasColumnType("bigint");

                    b.Property<byte>("volume_unit")
                        .HasColumnType("tinyint unsigned");

                    b.Property<byte>("weight_unit")
                        .HasColumnType("tinyint unsigned");

                    b.HasKey("id");

                    b.ToTable("spu");
                });

            modelBuilder.Entity("ModernWMS.WMS.Entities.Models.StockEntity", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int>("goods_location_id")
                        .HasColumnType("int");

                    b.Property<int>("goods_owner_id")
                        .HasColumnType("int");

                    b.Property<bool>("is_freeze")
                        .HasColumnType("tinyint(1)");

                    b.Property<DateTime>("last_update_time")
                        .IsConcurrencyToken()
                        .HasColumnType("datetime(6)");

                    b.Property<int>("qty")
                        .HasColumnType("int");

                    b.Property<int>("sku_id")
                        .HasColumnType("int");

                    b.Property<long>("tenant_id")
                        .HasColumnType("bigint");

                    b.HasKey("id");

                    b.ToTable("stock");
                });

            modelBuilder.Entity("ModernWMS.WMS.Entities.Models.StockadjustEntity", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<DateTime>("create_time")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("creator")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<int>("goods_location_id")
                        .HasColumnType("int");

                    b.Property<int>("goods_owner_id")
                        .HasColumnType("int");

                    b.Property<bool>("is_update_stock")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("job_code")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<byte>("job_type")
                        .HasColumnType("tinyint unsigned");

                    b.Property<DateTime>("last_update_time")
                        .HasColumnType("datetime(6)");

                    b.Property<int>("qty")
                        .HasColumnType("int");

                    b.Property<int>("sku_id")
                        .HasColumnType("int");

                    b.Property<int>("source_table_id")
                        .HasColumnType("int");

                    b.Property<long>("tenant_id")
                        .HasColumnType("bigint");

                    b.HasKey("id");

                    b.ToTable("stockadjust");
                });

            modelBuilder.Entity("ModernWMS.WMS.Entities.Models.StockfreezeEntity", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int>("goods_location_id")
                        .HasColumnType("int");

                    b.Property<int>("goods_owner_id")
                        .HasColumnType("int");

                    b.Property<DateTime>("handle_time")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("handler")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("job_code")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<bool>("job_type")
                        .HasColumnType("tinyint(1)");

                    b.Property<DateTime>("last_update_time")
                        .HasColumnType("datetime(6)");

                    b.Property<int>("sku_id")
                        .HasColumnType("int");

                    b.Property<long>("tenant_id")
                        .HasColumnType("bigint");

                    b.HasKey("id");

                    b.ToTable("stockfreeze");
                });

            modelBuilder.Entity("ModernWMS.WMS.Entities.Models.StockmoveEntity", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<DateTime>("create_time")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("creator")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<int>("dest_googs_location_id")
                        .HasColumnType("int");

                    b.Property<int>("goods_owner_id")
                        .HasColumnType("int");

                    b.Property<DateTime>("handle_time")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("handler")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("job_code")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<DateTime>("last_update_time")
                        .HasColumnType("datetime(6)");

                    b.Property<byte>("move_status")
                        .HasColumnType("tinyint unsigned");

                    b.Property<int>("orig_goods_location_id")
                        .HasColumnType("int");

                    b.Property<int>("qty")
                        .HasColumnType("int");

                    b.Property<int>("sku_id")
                        .HasColumnType("int");

                    b.Property<long>("tenant_id")
                        .HasColumnType("bigint");

                    b.HasKey("id");

                    b.ToTable("stockmove");
                });

            modelBuilder.Entity("ModernWMS.WMS.Entities.Models.StockprocessEntity", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<DateTime>("create_time")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("creator")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("job_code")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<bool>("job_type")
                        .HasColumnType("tinyint(1)");

                    b.Property<DateTime>("last_update_time")
                        .HasColumnType("datetime(6)");

                    b.Property<bool>("process_status")
                        .HasColumnType("tinyint(1)");

                    b.Property<DateTime>("process_time")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("processor")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<long>("tenant_id")
                        .HasColumnType("bigint");

                    b.HasKey("id");

                    b.ToTable("stockprocess");
                });

            modelBuilder.Entity("ModernWMS.WMS.Entities.Models.StockprocessdetailEntity", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int>("goods_location_id")
                        .HasColumnType("int");

                    b.Property<int>("goods_owner_id")
                        .HasColumnType("int");

                    b.Property<bool>("is_source")
                        .HasColumnType("tinyint(1)");

                    b.Property<bool>("is_update_stock")
                        .HasColumnType("tinyint(1)");

                    b.Property<DateTime>("last_update_time")
                        .HasColumnType("datetime(6)");

                    b.Property<int>("qty")
                        .HasColumnType("int");

                    b.Property<int>("sku_id")
                        .HasColumnType("int");

                    b.Property<int>("stock_process_id")
                        .HasColumnType("int");

                    b.Property<long>("tenant_id")
                        .HasColumnType("bigint");

                    b.HasKey("id");

                    b.HasIndex("stock_process_id");

                    b.ToTable("stockprocessdetail");
                });

            modelBuilder.Entity("ModernWMS.WMS.Entities.Models.StocktakingEntity", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int>("book_qty")
                        .HasColumnType("int");

                    b.Property<int>("counted_qty")
                        .HasColumnType("int");

                    b.Property<DateTime>("create_time")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("creator")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<int>("difference_qty")
                        .HasColumnType("int");

                    b.Property<int>("goods_location_id")
                        .HasColumnType("int");

                    b.Property<int>("goods_owner_id")
                        .HasColumnType("int");

                    b.Property<DateTime>("handle_time")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("handler")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("job_code")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<bool>("job_status")
                        .HasColumnType("tinyint(1)");

                    b.Property<DateTime>("last_update_time")
                        .HasColumnType("datetime(6)");

                    b.Property<int>("sku_id")
                        .HasColumnType("int");

                    b.Property<long>("tenant_id")
                        .HasColumnType("bigint");

                    b.HasKey("id");

                    b.ToTable("stocktaking");
                });

            modelBuilder.Entity("ModernWMS.WMS.Entities.Models.SupplierEntity", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("address")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("city")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("contact_tel")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<DateTime>("create_time")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("creator")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("email")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<bool>("is_valid")
                        .HasColumnType("tinyint(1)");

                    b.Property<DateTime>("last_update_time")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("manager")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("supplier_name")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<long>("tenant_id")
                        .HasColumnType("bigint");

                    b.HasKey("id");

                    b.ToTable("supplier");
                });

            modelBuilder.Entity("ModernWMS.WMS.Entities.Models.WarehouseEntity", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("address")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("city")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("contact_tel")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<DateTime>("create_time")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("creator")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("email")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<bool>("is_valid")
                        .HasColumnType("tinyint(1)");

                    b.Property<DateTime>("last_update_time")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("manager")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<long>("tenant_id")
                        .HasColumnType("bigint");

                    b.Property<string>("warehouse_name")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("id");

                    b.ToTable("warehouse");
                });

            modelBuilder.Entity("ModernWMS.WMS.Entities.Models.WarehouseareaEntity", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("area_name")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<byte>("area_property")
                        .HasColumnType("tinyint unsigned");

                    b.Property<DateTime>("create_time")
                        .HasColumnType("datetime(6)");

                    b.Property<bool>("is_valid")
                        .HasColumnType("tinyint(1)");

                    b.Property<DateTime>("last_update_time")
                        .HasColumnType("datetime(6)");

                    b.Property<int>("parent_id")
                        .HasColumnType("int");

                    b.Property<long>("tenant_id")
                        .HasColumnType("bigint");

                    b.Property<int>("warehouse_id")
                        .HasColumnType("int");

                    b.HasKey("id");

                    b.ToTable("warehousearea");
                });

            modelBuilder.Entity("ModernWMS.WMS.Entities.Models.DispatchpicklistEntity", b =>
                {
                    b.HasOne("ModernWMS.WMS.Entities.Models.DispatchlistEntity", "Dispatchlist")
                        .WithMany("detailList")
                        .HasForeignKey("dispatchlist_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Dispatchlist");
                });

            modelBuilder.Entity("ModernWMS.WMS.Entities.Models.SkuEntity", b =>
                {
                    b.HasOne("ModernWMS.WMS.Entities.Models.SpuEntity", "Spu")
                        .WithMany("detailList")
                        .HasForeignKey("spu_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Spu");
                });

            modelBuilder.Entity("ModernWMS.WMS.Entities.Models.StockprocessdetailEntity", b =>
                {
                    b.HasOne("ModernWMS.WMS.Entities.Models.StockprocessEntity", "Stockprocess")
                        .WithMany("detailList")
                        .HasForeignKey("stock_process_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Stockprocess");
                });

            modelBuilder.Entity("ModernWMS.WMS.Entities.Models.DispatchlistEntity", b =>
                {
                    b.Navigation("detailList");
                });

            modelBuilder.Entity("ModernWMS.WMS.Entities.Models.SpuEntity", b =>
                {
                    b.Navigation("detailList");
                });

            modelBuilder.Entity("ModernWMS.WMS.Entities.Models.StockprocessEntity", b =>
                {
                    b.Navigation("detailList");
                });
#pragma warning restore 612, 618
        }
    }
}
